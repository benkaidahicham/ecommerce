{"version":3,"file":"unop-react-dropdown.cjs.production.min.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/Dropdown.tsx","../src/types.ts","../src/functions.module.ts","../src/index.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from 'react';\r\nimport { DropDownProps } from './types';\r\nimport './Dropdown.css';\r\n\r\nconst DropDown: React.FC<DropDownProps> = ({\r\n  children,\r\n  trigger,\r\n  handleClick,\r\n  handleMouseLeave,\r\n  handleMouseOver,\r\n  dropdownMenuRef,\r\n  show,\r\n  style,\r\n  dropdownRef,\r\n  makeDisappear,\r\n  displayMenuItem,\r\n  dropdownWrapperClassName,\r\n  dropdownMenuClassName,\r\n}) => (\r\n  <div\r\n    className={`UnopdropDown_EMFQP${\r\n      dropdownWrapperClassName ? ` ${dropdownWrapperClassName}` : ''\r\n    }`}\r\n    onMouseLeave={handleMouseLeave}\r\n    onMouseOver={handleMouseOver}\r\n    onFocus={() => {}}\r\n    role=\"button\"\r\n    tabIndex={0}\r\n    ref={dropdownRef}\r\n  >\r\n    {React.cloneElement(trigger, {\r\n      onClick: handleClick,\r\n      show: displayMenuItem,\r\n      hide: makeDisappear,\r\n      open: show,\r\n    })}\r\n\r\n    <div\r\n      className={`drop-down-menu_EMFQP${\r\n        show ? ' reveal-drop-down-menu_EMFQP' : ''\r\n      }${dropdownMenuClassName ? ` ${dropdownMenuClassName}` : ''}`}\r\n      style={style}\r\n      ref={dropdownMenuRef}\r\n    >\r\n      {typeof children === 'function'\r\n        ? (children as Function)({\r\n            show: displayMenuItem,\r\n            hide: makeDisappear,\r\n            open: show,\r\n          })\r\n        : children}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default DropDown;\r\n","import React from 'react';\r\n\r\nexport interface CommonProps {\r\n  trigger: JSX.Element;\r\n  dropdownWrapperClassName?: string;\r\n  dropdownMenuClassName?: string;\r\n  children:\r\n    | React.ReactNode\r\n    | ((value: {\r\n        show: (e?: any) => void;\r\n        hide: (e?: any) => void;\r\n        open: boolean;\r\n      }) => React.ReactNode);\r\n}\r\n\r\nexport type CustomMouseEvent =\r\n  | MouseEvent\r\n  | React.MouseEvent<HTMLDivElement, MouseEvent>;\r\n\r\nexport interface DropDownProps extends CommonProps {\r\n  handleClick: (e: CustomMouseEvent) => void;\r\n  handleMouseOver: (e: CustomMouseEvent) => void;\r\n  handleMouseLeave: (e: CustomMouseEvent) => void;\r\n  show: boolean;\r\n  style: React.CSSProperties;\r\n  dropdownMenuRef: React.RefObject<HTMLDivElement>;\r\n  dropdownRef: React.RefObject<HTMLDivElement>;\r\n  makeDisappear: (e?: CustomMouseEvent) => void;\r\n  displayMenuItem: (e?: CustomMouseEvent) => void;\r\n}\r\n\r\nexport enum DropDowndirections {\r\n  RIGHT = 'RIGHT',\r\n  LEFT = 'LEFT',\r\n  CENTER = 'CENTER',\r\n}\r\n\r\nexport interface UnopDropdownProps extends CommonProps {\r\n  align?: DropDowndirections;\r\n  onDisappearStart?: (e?: any) => void;\r\n  onAppear?: (e?: any) => void;\r\n  onDisappear?: (e?: any) => void;\r\n  delay?: number;\r\n  hover?: boolean;\r\n  closeOnClickOut?: boolean;\r\n  closeOnDropdownClicked?: boolean;\r\n}\r\n\r\nexport interface TriggerProps {\r\n  onClick: (e: CustomMouseEvent) => void;\r\n  show: (e?: CustomMouseEvent | undefined) => void;\r\n  hide: (e?: CustomMouseEvent | undefined) => void;\r\n  open: boolean;\r\n}\r\n","import { DropDowndirections } from './types';\r\n\r\nexport module Utility {\r\n  export const getStyleObject = (\r\n    align: DropDowndirections,\r\n    width: number\r\n  ): React.CSSProperties => {\r\n    const style: React.CSSProperties = {};\r\n    if (align === DropDowndirections.RIGHT) {\r\n      style.right = 0;\r\n    } else if (align === DropDowndirections.CENTER) {\r\n      style.left = `50%`;\r\n      style.marginLeft = `-${width / 2}px`;\r\n    } else {\r\n      style.left = 0;\r\n    }\r\n    return style;\r\n  };\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\nimport DropDown from './Dropdown';\nimport {\n  UnopDropdownProps,\n  DropDowndirections,\n  CustomMouseEvent,\n  TriggerProps,\n} from './types';\nimport { Utility } from './functions.module';\n\nconst UnopDropdown: React.FC<UnopDropdownProps> = ({\n  trigger,\n  children,\n  align = DropDowndirections.RIGHT,\n  onAppear,\n  onDisappear,\n  onDisappearStart,\n  delay,\n  hover,\n  closeOnClickOut = false,\n  closeOnDropdownClicked = false,\n  dropdownWrapperClassName,\n  dropdownMenuClassName,\n}) => {\n  const [show, setShow] = useState(false);\n\n  const timer = useRef<ReturnType<typeof setTimeout> | null>(null);\n\n  const dropdownWidth = useRef(0);\n\n  const dropdownMenuRef = useRef<HTMLDivElement>(null);\n\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const element = dropdownMenuRef.current!;\n    element.style.visibility = 'hidden';\n    element.style.display = 'block';\n    dropdownWidth.current = element.offsetWidth;\n    element.style.display = 'none';\n    element.style.visibility = 'visible';\n  }, []);\n\n  const handler = (e: MouseEvent) => {\n    const path = e.composedPath();\n    if (show && closeOnClickOut && !path.includes(dropdownMenuRef.current!)) {\n      handleAction(e);\n    } else {\n      if (\n        show &&\n        closeOnDropdownClicked &&\n        path.includes(dropdownMenuRef.current!)\n      ) {\n        handleAction(e);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (closeOnClickOut || closeOnDropdownClicked) {\n      window.addEventListener('click', handler);\n    }\n    return () => {\n      window.removeEventListener('click', handler);\n    };\n  }, [show]);\n\n  const displayMenuItem = (e?: CustomMouseEvent) => {\n    if (timer) clearTimeout(timer.current!);\n    timer.current = null;\n    setShow(true);\n    if (onAppear) onAppear(e);\n  };\n\n  const makeDisappear = (e?: CustomMouseEvent) => {\n    const timerFunc = () =>\n      setTimeout(() => {\n        setShow(false);\n        if (onDisappear) onDisappear(e);\n      }, delay || 0);\n    timer.current = timerFunc();\n    if (onDisappearStart) onDisappearStart(e);\n  };\n\n  const handleAction = (e: CustomMouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (show) {\n      makeDisappear(e);\n    } else {\n      displayMenuItem(e);\n    }\n  };\n\n  const handleMouseOver = (e: CustomMouseEvent) => {\n    if (hover && !show) {\n      handleAction(e);\n    }\n  };\n\n  const handleMouseLeave = (e: CustomMouseEvent) => {\n    if (hover && show) {\n      handleAction(e);\n    }\n  };\n\n  return (\n    <DropDown\n      handleMouseOver={handleMouseOver}\n      handleMouseLeave={handleMouseLeave}\n      handleClick={handleAction}\n      show={show}\n      trigger={trigger}\n      style={Utility.getStyleObject(align, dropdownWidth.current)}\n      dropdownMenuRef={dropdownMenuRef}\n      dropdownRef={dropdownRef}\n      makeDisappear={makeDisappear}\n      displayMenuItem={displayMenuItem}\n      dropdownWrapperClassName={dropdownWrapperClassName}\n      dropdownMenuClassName={dropdownMenuClassName}\n    >\n      {children}\n    </DropDown>\n  );\n};\n\nexport { UnopDropdownProps, DropDowndirections, TriggerProps };\n\nexport default UnopDropdown;\n"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","DropDowndirections","Utility","DropDown","children","dropdownMenuRef","show","makeDisappear","displayMenuItem","dropdownWrapperClassName","dropdownMenuClassName","React","className","onMouseLeave","handleMouseLeave","onMouseOver","handleMouseOver","onFocus","role","tabIndex","dropdownRef","cloneElement","trigger","onClick","handleClick","hide","open","align","width","RIGHT","right","CENTER","left","marginLeft","onAppear","onDisappear","onDisappearStart","delay","hover","closeOnClickOut","closeOnDropdownClicked","useState","setShow","timer","useRef","dropdownWidth","useEffect","element","current","visibility","display","offsetWidth","handler","e","path","composedPath","includes","handleAction","window","addEventListener","removeEventListener","clearTimeout","setTimeout","preventDefault","stopPropagation","getStyleObject"],"mappings":"qJAAA,SAAqBA,EAAKC,QACX,IAARA,IAAiBA,EAAM,IAC5B,IAAIC,EAAWD,EAAIC,SAEnB,GAAgC,oBAAbC,SAAnB,CAEA,IAAIC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DC,EAAQH,SAASI,cAAc,SACnCD,EAAME,KAAO,WAEI,QAAbN,GACEE,EAAKK,WACPL,EAAKM,aAAaJ,EAAOF,EAAKK,YAKhCL,EAAKO,YAAYL,GAGfA,EAAMM,WACRN,EAAMM,WAAWC,QAAUb,EAE3BM,EAAMK,YAAYR,SAASW,eAAed,saCnB9C,IC2BYe,EC7BEC,EFERC,EAAoC,gBACxCC,IAAAA,SAKAC,IAAAA,gBACAC,IAAAA,KACAd,IAAAA,MAEAe,IAAAA,cACAC,IAAAA,gBACAC,IAAAA,yBACAC,IAAAA,6BAEAC,uBACEC,gCACEH,MAA+BA,EAA6B,IAE9DI,eAfFC,iBAgBEC,cAfFC,gBAgBEC,QAAS,aACTC,KAAK,SACLC,SAAU,EACVhC,MAfFiC,aAiBGT,EAAMU,eAxBTC,QAwB+B,CAC3BC,UAxBJC,YAyBIlB,KAAME,EACNiB,KAAMlB,EACNmB,KAAMpB,IAGRK,uBACEC,kCACEN,EAAO,+BAAiC,KACvCI,MAA4BA,EAA0B,IACzDlB,MAAOA,EACPL,IAAKkB,GAEgB,mBAAbD,EACHA,EAAsB,CACrBE,KAAME,EACNiB,KAAMlB,EACNmB,KAAMpB,IAERF,MCnBEH,EAAAA,6BAAAA,8CAEVA,cACAA,kBChCF,SAAcC,GACCA,iBAAiB,SAC5ByB,EACAC,OAEMpC,EAA6B,UAC/BmC,IAAU1B,2BAAmB4B,MAC/BrC,EAAMsC,MAAQ,EACLH,IAAU1B,2BAAmB8B,QACtCvC,EAAMwC,WACNxC,EAAMyC,eAAiBL,EAAQ,QAE/BpC,EAAMwC,KAAO,EAERxC,GAdX,CAAcU,IAAAA,uBCQoC,gBAChDoB,IAAAA,QACAlB,IAAAA,aACAuB,MAAAA,aAAQ1B,2BAAmB4B,QAC3BK,IAAAA,SACAC,IAAAA,YACAC,IAAAA,iBACAC,IAAAA,MACAC,IAAAA,UACAC,gBAAAA,oBACAC,uBAAAA,gBACA/B,IAAAA,yBACAC,IAAAA,wBAEwB+B,YAAS,GAA1BnC,OAAMoC,OAEPC,EAAQC,SAA6C,MAErDC,EAAgBD,SAAO,GAEvBvC,EAAkBuC,SAAuB,MAEzCxB,EAAcwB,SAAuB,MAE3CE,aAAU,eACFC,EAAU1C,EAAgB2C,QAChCD,EAAQvD,MAAMyD,WAAa,SAC3BF,EAAQvD,MAAM0D,QAAU,QACxBL,EAAcG,QAAUD,EAAQI,YAChCJ,EAAQvD,MAAM0D,QAAU,OACxBH,EAAQvD,MAAMyD,WAAa,YAC1B,QAEGG,EAAU,SAACC,OACTC,EAAOD,EAAEE,gBACXjD,GAAQiC,IAAoBe,EAAKE,SAASnD,EAAgB2C,UAI1D1C,GACAkC,GACAc,EAAKE,SAASnD,EAAgB2C,WALhCS,EAAaJ,IAYjBP,aAAU,kBACJP,GAAmBC,IACrBkB,OAAOC,iBAAiB,QAASP,GAE5B,WACLM,OAAOE,oBAAoB,QAASR,MAErC,CAAC9C,QAEEE,EAAkB,SAAC6C,GACnBV,GAAOkB,aAAalB,EAAMK,SAC9BL,EAAMK,QAAU,KAChBN,GAAQ,GACJR,GAAUA,EAASmB,IAGnB9C,EAAgB,SAAC8C,GAMrBV,EAAMK,QAJJc,YAAW,WACTpB,GAAQ,GACJP,GAAaA,EAAYkB,KAC5BhB,GAAS,GAEVD,GAAkBA,EAAiBiB,IAGnCI,EAAe,SAACJ,GACpBA,EAAEU,iBACFV,EAAEW,kBACE1D,EACFC,EAAc8C,GAEd7C,EAAgB6C,WAiBlB1C,gBAACR,GACCa,gBAdoB,SAACqC,GACnBf,IAAUhC,GACZmD,EAAaJ,IAabvC,iBATqB,SAACuC,GACpBf,GAAShC,GACXmD,EAAaJ,IAQb7B,YAAaiC,EACbnD,KAAMA,EACNgB,QAASA,EACT9B,MAAOU,EAAQ+D,eAAetC,EAAOkB,EAAcG,SACnD3C,gBAAiBA,EACjBe,YAAaA,EACbb,cAAeA,EACfC,gBAAiBA,EACjBC,yBAA0BA,EAC1BC,sBAAuBA,GAEtBN"}